//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""eec47c3f-2d64-46f4-9903-85cb5b1102ff"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""97d1bb5c-8035-4fbd-839a-a630df139825"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move1"",
                    ""type"": ""Value"",
                    ""id"": ""99887207-e3d3-43a4-9300-96867cd13484"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move2"",
                    ""type"": ""Value"",
                    ""id"": ""12068b02-7449-4886-9fb6-e10d20db9e19"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Extend"",
                    ""type"": ""Button"",
                    ""id"": ""07da9623-e45e-4671-8be9-bd2f36e11675"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Extend1"",
                    ""type"": ""Button"",
                    ""id"": ""16f7a92f-3f5a-406d-a9da-b5b471abf775"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Extend2"",
                    ""type"": ""Button"",
                    ""id"": ""b4d2fc6d-6be5-4923-9ea5-e87f2fbe2b1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clamp"",
                    ""type"": ""Button"",
                    ""id"": ""38de7c9a-5de9-4d42-ab86-0817d5d9a95b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clamp1"",
                    ""type"": ""Button"",
                    ""id"": ""8feee385-6f25-4ae3-a66e-9ae8721968a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clamp2"",
                    ""type"": ""Button"",
                    ""id"": ""27e7410c-f0b7-4538-bf8e-043d908bd573"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thrust1"",
                    ""type"": ""Button"",
                    ""id"": ""3a842b94-5dc8-41f8-a3a7-6a20aa038cb9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thrust2"",
                    ""type"": ""Button"",
                    ""id"": ""a8b642b2-490b-40b3-b350-1301db592a03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Yaw1"",
                    ""type"": ""Value"",
                    ""id"": ""4b26239e-9603-4061-aa7a-bee9170b8cb0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw2"",
                    ""type"": ""Value"",
                    ""id"": ""56ec4b10-fca6-4b21-8832-3bed8201cd2a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c146ef7b-3213-4c07-91fc-f8e9fdb75a2a"",
                    ""path"": ""<HID::Logitech Extreme 3D pro>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c256ff7d-d6f3-4188-aab8-ae78142609bb"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""817382ac-e3a5-49b5-8b41-f37b75d360d0"",
                    ""path"": ""<HID::Logitech Extreme 3D pro>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""3657a6bc-29a2-479c-b83b-482ced779a12"",
                    ""path"": ""<HID::Logitech Extreme 3D pro>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""844274b8-642d-4ff7-8a3f-63ba93cab6a8"",
                    ""path"": ""<DualShockGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73e5a01e-5727-4278-a3c5-605559280a5f"",
                    ""path"": ""<HID::Logitech Extreme 3D pro>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clamp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""cdf23ba2-ea2e-4c31-9a4a-230a6b280702"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""44627dde-bd58-4585-b4a9-0cf2e8141f23"",
                    ""path"": ""<DualShockGamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ddc5293e-97b8-4ceb-97ff-5a26ede66fd3"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""aec1831d-d968-46c0-838c-e2cf80c959ec"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clamp1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""483bd6bd-2482-404d-b0ce-6fc7ab2fa536"",
                    ""path"": ""<HID::Thrustmaster T.16000M>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""eeae0c43-3144-4c09-8692-132de7b7bc22"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""110727ce-3f1b-4d49-a0b4-980003ceb7d8"",
                    ""path"": ""<DualShockGamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""89bdb608-f7ba-4199-816d-ff1e017c0603"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""0d038c1a-dec2-44c8-aed6-2facfd8bbf69"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""35340f87-11b1-4440-804e-bea61cb82bfc"",
                    ""path"": ""<HID::Thrustmaster T.16000M>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""db49c994-274c-45af-9038-9a103f76bd34"",
                    ""path"": ""<HID::Thrustmaster T.16000M>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""797cd020-aa86-432f-90ea-279463926501"",
                    ""path"": ""<HID::Thrustmaster T.16000M>/rz"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""bf7dfc0b-d3ba-404b-bdf6-ccd7bbd4a5d2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""18673931-5cf9-47d8-a0d1-2dc18663797d"",
                    ""path"": ""<DualShockGamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""81df3a0d-8f16-4f00-8faa-194b7ee02a82"",
                    ""path"": ""<DualShockGamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1cc22e2b-b9a2-4ee7-b80f-49326d5e653d"",
                    ""path"": ""<HID::Thrustmaster T.16000M>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clamp2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""6fbd0fe5-b7f1-44fa-90d6-479c370c7ddb"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""03b1aa86-7c29-4120-b68f-9da21af316f2"",
                    ""path"": ""<HID::Thrustmaster T.16000M>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""14e4e2ac-9149-4dc1-879d-cf14ffcd7e2b"",
                    ""path"": ""<HID::Thrustmaster T.16000M>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Extend2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_Move1 = m_Gameplay.FindAction("Move1", throwIfNotFound: true);
        m_Gameplay_Move2 = m_Gameplay.FindAction("Move2", throwIfNotFound: true);
        m_Gameplay_Extend = m_Gameplay.FindAction("Extend", throwIfNotFound: true);
        m_Gameplay_Extend1 = m_Gameplay.FindAction("Extend1", throwIfNotFound: true);
        m_Gameplay_Extend2 = m_Gameplay.FindAction("Extend2", throwIfNotFound: true);
        m_Gameplay_Clamp = m_Gameplay.FindAction("Clamp", throwIfNotFound: true);
        m_Gameplay_Clamp1 = m_Gameplay.FindAction("Clamp1", throwIfNotFound: true);
        m_Gameplay_Clamp2 = m_Gameplay.FindAction("Clamp2", throwIfNotFound: true);
        m_Gameplay_Thrust1 = m_Gameplay.FindAction("Thrust1", throwIfNotFound: true);
        m_Gameplay_Thrust2 = m_Gameplay.FindAction("Thrust2", throwIfNotFound: true);
        m_Gameplay_Yaw1 = m_Gameplay.FindAction("Yaw1", throwIfNotFound: true);
        m_Gameplay_Yaw2 = m_Gameplay.FindAction("Yaw2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_Move1;
    private readonly InputAction m_Gameplay_Move2;
    private readonly InputAction m_Gameplay_Extend;
    private readonly InputAction m_Gameplay_Extend1;
    private readonly InputAction m_Gameplay_Extend2;
    private readonly InputAction m_Gameplay_Clamp;
    private readonly InputAction m_Gameplay_Clamp1;
    private readonly InputAction m_Gameplay_Clamp2;
    private readonly InputAction m_Gameplay_Thrust1;
    private readonly InputAction m_Gameplay_Thrust2;
    private readonly InputAction m_Gameplay_Yaw1;
    private readonly InputAction m_Gameplay_Yaw2;
    public struct GameplayActions
    {
        private @PlayerControls m_Wrapper;
        public GameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @Move1 => m_Wrapper.m_Gameplay_Move1;
        public InputAction @Move2 => m_Wrapper.m_Gameplay_Move2;
        public InputAction @Extend => m_Wrapper.m_Gameplay_Extend;
        public InputAction @Extend1 => m_Wrapper.m_Gameplay_Extend1;
        public InputAction @Extend2 => m_Wrapper.m_Gameplay_Extend2;
        public InputAction @Clamp => m_Wrapper.m_Gameplay_Clamp;
        public InputAction @Clamp1 => m_Wrapper.m_Gameplay_Clamp1;
        public InputAction @Clamp2 => m_Wrapper.m_Gameplay_Clamp2;
        public InputAction @Thrust1 => m_Wrapper.m_Gameplay_Thrust1;
        public InputAction @Thrust2 => m_Wrapper.m_Gameplay_Thrust2;
        public InputAction @Yaw1 => m_Wrapper.m_Gameplay_Yaw1;
        public InputAction @Yaw2 => m_Wrapper.m_Gameplay_Yaw2;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove1;
                @Move1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove1;
                @Move1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove1;
                @Move2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove2;
                @Move2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove2;
                @Move2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove2;
                @Extend.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend;
                @Extend.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend;
                @Extend.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend;
                @Extend1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend1;
                @Extend1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend1;
                @Extend1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend1;
                @Extend2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend2;
                @Extend2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend2;
                @Extend2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnExtend2;
                @Clamp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp;
                @Clamp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp;
                @Clamp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp;
                @Clamp1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp1;
                @Clamp1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp1;
                @Clamp1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp1;
                @Clamp2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp2;
                @Clamp2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp2;
                @Clamp2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnClamp2;
                @Thrust1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThrust1;
                @Thrust1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThrust1;
                @Thrust1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThrust1;
                @Thrust2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThrust2;
                @Thrust2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThrust2;
                @Thrust2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThrust2;
                @Yaw1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnYaw1;
                @Yaw1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnYaw1;
                @Yaw1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnYaw1;
                @Yaw2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnYaw2;
                @Yaw2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnYaw2;
                @Yaw2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnYaw2;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Move1.started += instance.OnMove1;
                @Move1.performed += instance.OnMove1;
                @Move1.canceled += instance.OnMove1;
                @Move2.started += instance.OnMove2;
                @Move2.performed += instance.OnMove2;
                @Move2.canceled += instance.OnMove2;
                @Extend.started += instance.OnExtend;
                @Extend.performed += instance.OnExtend;
                @Extend.canceled += instance.OnExtend;
                @Extend1.started += instance.OnExtend1;
                @Extend1.performed += instance.OnExtend1;
                @Extend1.canceled += instance.OnExtend1;
                @Extend2.started += instance.OnExtend2;
                @Extend2.performed += instance.OnExtend2;
                @Extend2.canceled += instance.OnExtend2;
                @Clamp.started += instance.OnClamp;
                @Clamp.performed += instance.OnClamp;
                @Clamp.canceled += instance.OnClamp;
                @Clamp1.started += instance.OnClamp1;
                @Clamp1.performed += instance.OnClamp1;
                @Clamp1.canceled += instance.OnClamp1;
                @Clamp2.started += instance.OnClamp2;
                @Clamp2.performed += instance.OnClamp2;
                @Clamp2.canceled += instance.OnClamp2;
                @Thrust1.started += instance.OnThrust1;
                @Thrust1.performed += instance.OnThrust1;
                @Thrust1.canceled += instance.OnThrust1;
                @Thrust2.started += instance.OnThrust2;
                @Thrust2.performed += instance.OnThrust2;
                @Thrust2.canceled += instance.OnThrust2;
                @Yaw1.started += instance.OnYaw1;
                @Yaw1.performed += instance.OnYaw1;
                @Yaw1.canceled += instance.OnYaw1;
                @Yaw2.started += instance.OnYaw2;
                @Yaw2.performed += instance.OnYaw2;
                @Yaw2.canceled += instance.OnYaw2;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnMove1(InputAction.CallbackContext context);
        void OnMove2(InputAction.CallbackContext context);
        void OnExtend(InputAction.CallbackContext context);
        void OnExtend1(InputAction.CallbackContext context);
        void OnExtend2(InputAction.CallbackContext context);
        void OnClamp(InputAction.CallbackContext context);
        void OnClamp1(InputAction.CallbackContext context);
        void OnClamp2(InputAction.CallbackContext context);
        void OnThrust1(InputAction.CallbackContext context);
        void OnThrust2(InputAction.CallbackContext context);
        void OnYaw1(InputAction.CallbackContext context);
        void OnYaw2(InputAction.CallbackContext context);
    }
}
